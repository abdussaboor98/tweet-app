package com.tweetapp.entity;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.tweetapp.configuration.converter.LocalDateTimeDynamoDBConverter;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "tweetAppTweets")
public class TweetEntity {

    @DynamoDBAutoGeneratedKey
    @DynamoDBHashKey
    private String id;

    @DynamoDBAttribute
    private String message;

    @DynamoDBAttribute
    private String username;

    @DynamoDBAttribute
    private String firstName;

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBAttributeType.L)
    private Set<String> likedUsernames;

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBAttributeType.L)
    private List<CommentEntity> comments;

    @DynamoDBTypeConverted(converter = LocalDateTimeDynamoDBConverter.class)
    private LocalDateTime createdDateTime;

    @DynamoDBAttribute
    private boolean edited;
}
